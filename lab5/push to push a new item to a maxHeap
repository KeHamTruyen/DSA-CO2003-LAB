template<class T>
void Heap<T>::push(T item){
    if (count == capacity) ensureCapacity(capacity+1);
    elements[count] = item;
    ++count;
    reheapUp(count - 1);
}

template<class T>
void Heap<T>::ensureCapacity(int minCapacity){
    T* newElements = new T[minCapacity];
    for (int i = 0; i < count; ++i) {
        newElements[i] = elements[i];
    }
    delete[] elements;
    elements = newElements;
    capacity = minCapacity;
}

template<class T>
void Heap<T>::reheapUp(int position){
    if (position <= 0 || position >= count) return;
    int parent = (position - 1) / 2;
    if (elements[parent] < elements[position]) {
        int temp = elements[parent];
        elements[parent] = elements[position];
        elements[position] = temp;
        reheapUp(parent);
    }
    return;
}
